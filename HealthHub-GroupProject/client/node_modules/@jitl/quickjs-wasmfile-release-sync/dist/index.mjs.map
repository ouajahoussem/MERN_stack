{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type { QuickJSSyncVariant } from \"@jitl/quickjs-ffi-types\"\n\n/**\n * ### @jitl/quickjs-wasmfile-release-sync\n *\n * [Docs](https://github.com/justjake/quickjs-emscripten/blob/main/doc/@jitl/quickjs-wasmfile-release-sync/README.md) |\n * Variant with separate .WASM file. Supports browser ESM, NodeJS ESM, and NodeJS CommonJS.\n *\n * | Variable            |    Setting                     |    Description    |\n * | --                  | --                             | --                |\n * | library             | quickjs             | The original [bellard/quickjs](https://github.com/bellard/quickjs) library. Version [2024-01-13+626e0d4e](https://github.com/bellard/quickjs/commit/626e0d4e60db2b81a0505fa9c61941e608624e7e) vendored to quickjs-emscripten on 2024-02-11. |\n * | releaseMode         | release         | Optimized for performance; use when building/deploying your application. |\n * | syncMode            | sync            | The default, normal build. Note that both variants support regular async functions. |\n * | emscriptenInclusion | wasm | Has a separate .wasm file. May offer better caching in your browser, and reduces the size of your JS bundle. If you have issues, try a 'singlefile' variant. |\n * | exports             | require import browser workerd                  | Has these package.json export conditions |\n *\n */\nconst variant: QuickJSSyncVariant = {\n  type: \"sync\",\n  importFFI: () => import(\"./ffi.js\").then((mod) => mod.QuickJSFFI),\n  importModuleLoader: () =>\n    import(\"@jitl/quickjs-wasmfile-release-sync/emscripten-module\").then((mod) => mod.default),\n} as const\n\nexport default variant\n"],"mappings":"AAiBA,IAAMA,EAA8B,CAClC,KAAM,OACN,UAAW,IAAM,OAAO,WAAU,EAAE,KAAMC,GAAQA,EAAI,UAAU,EAChE,mBAAoB,IAClB,OAAO,uDAAuD,EAAE,KAAMA,GAAQA,EAAI,OAAO,CAC7F,EAEOC,EAAQF","names":["variant","mod","src_default"]}