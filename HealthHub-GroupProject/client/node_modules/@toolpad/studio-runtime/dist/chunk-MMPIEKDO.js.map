{"version":3,"sources":["../src/serverRuntime.ts"],"sourcesContent":["import { AsyncLocalStorage } from 'node:async_hooks';\nimport { IncomingMessage, ServerResponse } from 'node:http';\nimport * as cookie from 'cookie';\nimport { isWebContainer } from '@webcontainer/env';\nimport type express from 'express';\nimport { getSession, type Session } from './auth';\n\nexport interface ServerContext {\n  /**\n   * A dictionary mapping cookie name to cookie value.\n   */\n  cookies: Record<string, string>;\n  /**\n   * Use to set a cookie `name` with `value`.\n   */\n  setCookie: (name: string, value: string) => void;\n  /**\n   * Data about current authenticated session.\n   */\n  session: Session;\n}\n\nconst contextStore = new AsyncLocalStorage<ServerContext>();\n\nexport function getServerContext(): ServerContext | undefined {\n  return contextStore.getStore();\n}\n\nexport async function createServerContext(\n  req: IncomingMessage,\n  res: ServerResponse,\n): Promise<ServerContext> {\n  const cookies = cookie.parse(req.headers.cookie || '');\n\n  const session = await getSession(req as express.Request);\n\n  return {\n    cookies,\n    setCookie(name, value) {\n      res.setHeader('Set-Cookie', cookie.serialize(name, value, { path: '/' }));\n    },\n    session,\n  };\n}\n\nexport function withContext<R = void>(ctx: ServerContext, doWork: () => Promise<R>): Promise<R> {\n  const shouldBypassContext = isWebContainer();\n\n  if (shouldBypassContext) {\n    console.warn(\n      'Bypassing server context in web containers, see https://github.com/stackblitz/core/issues/2711',\n    );\n    return doWork();\n  }\n\n  return contextStore.run(ctx, doWork);\n}\n"],"mappings":";;;;;AAAA,SAAS,yBAAyB;AAElC,YAAY,YAAY;AACxB,SAAS,sBAAsB;AAmB/B,IAAM,eAAe,IAAI,kBAAiC;AAEnD,SAAS,mBAA8C;AAC5D,SAAO,aAAa,SAAS;AAC/B;AAEA,eAAsB,oBACpB,KACA,KACwB;AACxB,QAAM,UAAiB,aAAM,IAAI,QAAQ,UAAU,EAAE;AAErD,QAAM,UAAU,MAAM,WAAW,GAAsB;AAEvD,SAAO;AAAA,IACL;AAAA,IACA,UAAU,MAAM,OAAO;AACrB,UAAI,UAAU,cAAqB,iBAAU,MAAM,OAAO,EAAE,MAAM,IAAI,CAAC,CAAC;AAAA,IAC1E;AAAA,IACA;AAAA,EACF;AACF;AAEO,SAAS,YAAsB,KAAoB,QAAsC;AAC9F,QAAM,sBAAsB,eAAe;AAE3C,MAAI,qBAAqB;AACvB,YAAQ;AAAA,MACN;AAAA,IACF;AACA,WAAO,OAAO;AAAA,EAChB;AAEA,SAAO,aAAa,IAAI,KAAK,MAAM;AACrC;","names":[]}